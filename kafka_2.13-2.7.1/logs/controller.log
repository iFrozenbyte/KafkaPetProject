[2023-09-25 22:13:22,846] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@47d384ee, name=log4j:logger=kafka.controller (kafka.controller)
[2023-09-25 22:18:01,758] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-09-25 22:18:01,845] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 13 and epoch zk version is now 13 (kafka.controller.KafkaController)
[2023-09-25 22:18:01,847] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-09-25 22:18:01,849] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-09-25 22:18:01,852] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-09-25 22:18:01,854] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-09-25 22:18:01,860] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 1792) (kafka.controller.KafkaController)
[2023-09-25 22:18:01,877] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-09-25 22:18:01,983] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-09-25 22:18:02,005] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-09-25 22:18:02,012] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-09-25 22:18:02,012] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-09-25 22:18:02,012] INFO [Controller id=0] Current list of topics in the cluster: HashSet(topic_two, topic_one, __consumer_offsets) (kafka.controller.KafkaController)
[2023-09-25 22:18:02,012] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-09-25 22:18:02,016] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-09-25 22:18:02,016] INFO [Controller id=0] List of topics ineligible for deletion: topic_one,__consumer_offsets,topic_two (kafka.controller.KafkaController)
[2023-09-25 22:18:02,016] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-09-25 22:18:02,016] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(topic_one, __consumer_offsets, topic_two) (kafka.controller.TopicDeletionManager)
[2023-09-25 22:18:02,017] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-09-25 22:18:02,051] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-09-25 22:18:02,056] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-09-25 22:18:02,066] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-09-25 22:18:02,088] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-09-25 22:18:03,304] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=topic_two,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=topic_one,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=2,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=topic_two,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=2,Replica=2] -> OfflineReplica, [Topic=topic_two,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica, [Topic=topic_two,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-09-25 22:18:03,304] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-09-25 22:18:03,341] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-09-25 22:18:03,371] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, topic_two-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, topic_two-1 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, topic_one-0 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, topic_two-0 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-09-25 22:18:03,371] INFO [Controller id=0] Ready to serve as the new controller with epoch 13 (kafka.controller.KafkaController)
[2023-09-25 22:18:03,375] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-09-25 22:18:03,375] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-09-25 22:18:03,375] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-09-25 22:18:03,376] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-09-25 22:18:03,376] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-09-25 22:18:03,558] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-09-25 22:18:08,558] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 22:18:08,558] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 22:18:08,562] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 22:18:08,562] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 22:18:08,563] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), topic_one-0 -> List(1), __consumer_offsets-36 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), topic_two-2 -> List(1, 2, 0), __consumer_offsets-48 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)) (kafka.controller.KafkaController)
[2023-09-25 22:18:08,563] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-09-25 22:18:08,564] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-09-25 22:18:08,564] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), topic_two-1 -> List(2, 0, 1), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2023-09-25 22:18:08,564] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-09-25 22:18:08,564] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-09-25 22:21:27,522] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-09-25 22:21:27,683] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 14 and epoch zk version is now 14 (kafka.controller.KafkaController)
[2023-09-25 22:21:27,684] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2023-09-25 22:21:27,685] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-09-25 22:21:27,688] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-09-25 22:21:27,689] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2023-09-25 22:21:27,693] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 1852) (kafka.controller.KafkaController)
[2023-09-25 22:21:27,700] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-09-25 22:21:27,766] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2023-09-25 22:21:27,771] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-09-25 22:21:27,772] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2023-09-25 22:21:27,772] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-09-25 22:21:27,773] INFO [Controller id=0] Current list of topics in the cluster: HashSet(topic_two, topic_one, __consumer_offsets) (kafka.controller.KafkaController)
[2023-09-25 22:21:27,773] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-09-25 22:21:27,777] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-09-25 22:21:27,777] INFO [Controller id=0] List of topics ineligible for deletion: topic_one,__consumer_offsets,topic_two (kafka.controller.KafkaController)
[2023-09-25 22:21:27,777] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-09-25 22:21:27,777] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(topic_one, __consumer_offsets, topic_two) (kafka.controller.TopicDeletionManager)
[2023-09-25 22:21:27,783] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2023-09-25 22:21:27,788] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-09-25 22:21:27,792] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-09-25 22:21:27,794] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-09-25 22:21:27,804] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-09-25 22:21:28,649] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=topic_two,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=topic_one,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=2,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=topic_two,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=topic_two,Partition=2,Replica=2] -> OfflineReplica, [Topic=topic_two,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica, [Topic=topic_two,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-09-25 22:21:28,649] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-09-25 22:21:28,652] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-09-25 22:21:28,672] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, topic_two-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, topic_two-1 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, topic_one-0 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, topic_two-0 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-09-25 22:21:28,673] INFO [Controller id=0] Ready to serve as the new controller with epoch 14 (kafka.controller.KafkaController)
[2023-09-25 22:21:28,675] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-09-25 22:21:28,675] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-09-25 22:21:28,675] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-09-25 22:21:28,675] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-09-25 22:21:28,676] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-09-25 22:21:28,773] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-09-25 22:21:33,775] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 22:21:33,776] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 22:21:33,779] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 22:21:33,780] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 22:21:33,780] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-30 -> List(1), __consumer_offsets-21 -> List(1), __consumer_offsets-33 -> List(1), topic_one-0 -> List(1), __consumer_offsets-36 -> List(1), __consumer_offsets-6 -> List(1), __consumer_offsets-0 -> List(1), __consumer_offsets-45 -> List(1), __consumer_offsets-27 -> List(1), __consumer_offsets-9 -> List(1), __consumer_offsets-42 -> List(1), __consumer_offsets-3 -> List(1), __consumer_offsets-18 -> List(1), __consumer_offsets-15 -> List(1), __consumer_offsets-24 -> List(1), topic_two-2 -> List(1, 2, 0), __consumer_offsets-48 -> List(1), __consumer_offsets-39 -> List(1), __consumer_offsets-12 -> List(1)) (kafka.controller.KafkaController)
[2023-09-25 22:21:33,780] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-09-25 22:21:33,781] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-09-25 22:21:33,781] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), topic_two-1 -> List(2, 0, 1), __consumer_offsets-37 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2023-09-25 22:21:33,781] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-09-25 22:21:33,782] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-09-25 22:21:47,321] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2023-09-25 22:21:47,322] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-09-25 22:21:47,324] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-09-25 22:21:47,325] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2023-09-25 22:21:47,328] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-09-25 22:21:47,519] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-09-25 22:21:47,658] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-09-25 22:21:47,662] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2023-09-25 22:21:47,710] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1852, 1 -> 1905) (kafka.controller.KafkaController)
[2023-09-25 22:21:49,134] DEBUG [Controller id=0] Updating ISRs for partitions: Set(topic_two-2, topic_two-0, topic_two-1). (kafka.controller.KafkaController)
[2023-09-25 22:21:49,434] DEBUG [Controller id=0] ISR for partition topic_two-2 updated to [0,1] and zkVersion updated to [32] (kafka.controller.KafkaController)
[2023-09-25 22:21:49,434] DEBUG [Controller id=0] ISR for partition topic_two-0 updated to [0,1] and zkVersion updated to [31] (kafka.controller.KafkaController)
[2023-09-25 22:21:49,434] DEBUG [Controller id=0] ISR for partition topic_two-1 updated to [0,1] and zkVersion updated to [32] (kafka.controller.KafkaController)
[2023-09-25 22:22:03,879] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2023-09-25 22:22:03,879] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-09-25 22:22:03,882] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-09-25 22:22:03,882] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2023-09-25 22:22:03,884] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-09-25 22:22:04,178] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-09-25 22:22:04,305] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-09-25 22:22:04,305] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-09-25 22:22:04,306] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1852, 1 -> 1905, 2 -> 1942) (kafka.controller.KafkaController)
[2023-09-25 22:22:05,691] DEBUG [Controller id=0] Updating ISRs for partitions: Set(topic_two-2, topic_two-0, topic_two-1). (kafka.controller.KafkaController)
[2023-09-25 22:22:05,966] DEBUG [Controller id=0] ISR for partition topic_two-2 updated to [0,1,2] and zkVersion updated to [33] (kafka.controller.KafkaController)
[2023-09-25 22:22:05,966] DEBUG [Controller id=0] ISR for partition topic_two-0 updated to [0,1,2] and zkVersion updated to [32] (kafka.controller.KafkaController)
[2023-09-25 22:22:05,966] DEBUG [Controller id=0] ISR for partition topic_two-1 updated to [0,1,2] and zkVersion updated to [33] (kafka.controller.KafkaController)
[2023-09-25 22:26:33,782] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 22:26:33,782] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 22:26:33,783] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 22:26:33,783] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 22:26:33,783] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 22:26:33,783] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 22:26:33,783] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 22:26:33,783] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 22:31:33,784] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 22:31:33,784] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 22:31:33,785] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 22:31:33,785] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 22:31:33,785] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 22:31:33,785] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 22:31:33,785] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 22:31:33,785] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 22:36:33,788] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 22:36:33,788] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 22:36:33,788] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 22:36:33,788] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 22:36:33,788] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 22:36:33,788] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 22:36:33,788] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 22:36:33,788] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 22:41:33,789] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 22:41:33,789] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 22:41:33,790] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 22:41:33,790] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 22:41:33,790] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 22:41:33,790] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 22:41:33,790] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 22:41:33,790] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 22:46:33,791] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 22:46:33,791] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 22:46:33,791] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 22:46:33,791] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 22:46:33,791] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 22:46:33,791] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 22:46:33,791] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 22:46:33,791] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 22:51:33,792] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 22:51:33,792] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 22:51:33,792] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 22:51:33,792] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 22:51:33,792] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 22:51:33,792] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 22:51:33,792] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 22:51:33,792] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 22:56:33,794] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 22:56:33,794] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 22:56:33,794] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 22:56:33,794] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 22:56:33,795] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 22:56:33,795] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 22:56:33,795] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 22:56:33,795] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:01:33,795] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:01:33,796] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:01:33,796] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:01:33,796] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:01:33,796] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:01:33,796] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:01:33,796] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:01:33,796] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:06:33,798] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:06:33,798] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:06:33,798] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:06:33,798] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:06:33,798] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:06:33,798] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:06:33,798] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:06:33,798] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:11:33,800] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:11:33,800] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:11:33,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:11:33,800] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:11:33,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:11:33,800] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:11:33,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:11:33,800] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:16:33,802] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:16:33,802] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:16:33,802] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:16:33,802] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:16:33,802] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:16:33,802] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:16:33,802] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:16:33,802] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:21:33,804] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:21:33,804] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:21:33,804] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:21:33,804] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:21:33,804] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:21:33,804] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:21:33,804] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:21:33,804] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:26:33,806] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:26:33,806] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:26:33,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:26:33,806] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:26:33,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:26:33,806] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:26:33,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:26:33,806] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:31:33,808] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:31:33,808] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:31:33,808] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:31:33,808] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:31:33,808] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:31:33,808] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:31:33,808] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:31:33,808] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:36:33,810] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:36:33,810] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:36:33,810] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:36:33,810] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:36:33,810] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:36:33,810] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:36:33,810] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:36:33,810] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:41:33,812] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:41:33,812] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:41:33,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:41:33,812] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:41:33,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:41:33,812] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:41:33,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:41:33,812] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:46:33,814] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:46:33,814] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:46:33,814] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:46:33,814] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:46:33,814] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:46:33,814] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:46:33,814] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:46:33,814] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:51:33,816] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:51:33,816] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:51:33,816] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:51:33,816] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:51:33,816] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:51:33,816] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:51:33,816] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:51:33,816] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-25 23:56:33,817] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-25 23:56:33,817] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-25 23:56:33,817] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-25 23:56:33,817] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-25 23:56:33,817] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-25 23:56:33,817] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-25 23:56:33,817] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-25 23:56:33,817] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:01:33,819] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:01:33,821] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:01:33,821] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:01:33,821] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:01:33,821] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:01:33,821] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:01:33,821] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:01:33,821] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:06:33,823] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:06:33,823] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:06:33,823] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:06:33,823] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:06:33,823] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:06:33,824] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:06:33,824] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:06:33,824] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:11:33,824] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:11:33,824] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:11:33,824] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:11:33,824] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:11:33,824] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:11:33,824] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:11:33,824] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:11:33,824] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:16:33,826] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:16:33,826] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:16:33,826] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:16:33,826] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:16:33,826] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:16:33,826] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:16:33,827] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:16:33,827] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:21:33,828] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:21:33,828] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:21:33,828] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:21:33,828] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:21:33,828] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:21:33,829] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:21:33,829] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:21:33,829] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:26:33,829] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:26:33,829] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:26:33,829] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:26:33,829] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:26:33,829] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:26:33,829] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:26:33,829] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:26:33,830] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:31:33,831] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:31:33,831] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:31:33,831] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:31:33,831] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:31:33,831] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:31:33,831] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:31:33,831] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:31:33,831] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:36:33,832] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:36:33,832] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:36:33,832] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:36:33,832] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:36:33,832] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:36:33,832] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:36:33,832] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:36:33,832] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:41:33,834] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:41:33,834] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:41:33,834] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:41:33,834] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:41:33,834] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:41:33,834] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:41:33,834] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:41:33,834] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:46:33,836] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:46:33,836] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:46:33,836] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:46:33,836] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:46:33,836] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:46:33,836] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:46:33,836] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:46:33,836] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:51:33,837] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:51:33,837] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:51:33,837] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:51:33,837] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:51:33,838] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:51:33,838] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:51:33,838] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:51:33,838] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-09-26 00:56:33,840] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-09-26 00:56:33,840] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-09-26 00:56:33,840] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-09-26 00:56:33,841] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-09-26 00:56:33,841] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(topic_two-2 -> List(1, 2, 0)) (kafka.controller.KafkaController)
[2023-09-26 00:56:33,841] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.05263157894736842 (kafka.controller.KafkaController)
[2023-09-26 00:56:33,841] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(topic_two-1 -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2023-09-26 00:56:33,841] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.05555555555555555 (kafka.controller.KafkaController)
